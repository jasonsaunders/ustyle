:ruby
  @grid = Haml::Engine.new("
  .grid-example.us-grid-row
    .us-col-12
      .inner
        12 cols

  .grid-example.us-grid-row
    .us-col-1
      .inner
        1
    .us-col-11.last
      .inner
        11 cols

  .grid-example.us-grid-row
    .us-col-2
      .inner
        2 cols
    .us-col-10.last
      .inner
        10 cols

  .grid-example.us-grid-row
    .us-col-3
      .inner
        3 cols
    .us-col-9.last
      .inner
        9 cols

  .grid-example.us-grid-row
    .us-col-4
      .inner
        4 cols
    .us-col-8.last
      .inner
        8 cols

  .grid-example.us-grid-row
    .us-col-5
      .inner
        5 cols
    .us-col-7.last
      .inner
        7 cols

  .grid-example.us-grid-row
    .us-col-6
      .inner
        6 cols
    .us-col-6.last
      .inner
        6 cols
  ").render


:ruby
  @grid_logos = Haml::Engine.new("
  .us-logobar
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/british-gas.png', :alt=>'British Gas', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/edf.png', :alt=>'EDF', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/e-dot-on.png', :alt=>'e.on', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/npower.png', :alt=>'npower', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/scottishpower.png', :alt=>'Scottishpower', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/sse.png', :alt=>'SSE', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/the-co-operative.png', :alt=>'The Co-operative Energy', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/ecotricity.png', :alt=>'Ecotricity', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/first-utility.png', :alt=>'First:utility', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/marksandspencers.png', :alt=>'M&S', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/ovo.png', :alt=>'Ovo Energy', :width=>'120', :height=>'50' }
    %a.us-logobar__link{:href=>'#'}
      %img.us-logobar__image{:src=>'http://dnpc2x3bdjjqt.cloudfront.net/s3/uswitch-assets-eu/logos/v0.18/retina/sainsburys.png', :alt=>'Sainburys Energy', :width=>'120', :height=>'50' }

  ").render



.us-container

  %h1.styleguide-title Grid

  %p The grid no longer uses a system of floated elements seperated by a gutter created by "margin-right", instead each column has a left and right padding of 15px. This allows the designers to guarantee a consistent gutter in their layouts. But it does mean we need to bear in mind a few issues.

  %h2 the us-row wrapper

  %p Each grid area needs to have a wrapper that either uses, or corresponds to the +us-row() SASS mixin. This gives a negative margin of 15px left and right of the grid, cancelling out the extra unwanted 15px padding on first or last child elements of each row. Without it, your grid may appear to not extend to the edge of the container. This has the benefit of never needing to set :first/last/nth child statements to clear the ends of rows and also works fine in IE8 without extra markup.

  .grid-insight
    .us-col-12
      .inner
        %p 12 col, but without the us-row wrapper

  .grid-insight.us-grid-row
    .us-col-12
      .inner
        %p 12 col, with the us-row wrapper

  %h2 inner column wrappers

  %p Because the grid uses padding instead of margins, adding a background colour or border to a column will make the columns appear to touch, even if the content has the correct gutter. You'll also notice that the grid appears to extend beyond the width of the container, as the us-row wrapper is doing it's job of making the content in the first and last child extend to the edge.

  .grid-insight.us-grid-row
    .us-col-6.grid-insight-nowrap
      %p 6 col, no inner
    .us-col-3.grid-insight-nowrap
      %p 3 col, no inner
    .us-col-3.grid-insight-nowrap
      %p 3 col, no inner

  %p Because of this, all columns need inner wrapper containers, which are the elements that you style to give the appearence of columns. Although this does mean extra DOM, it does have the benefit of giving designers and devs better options for deciding if content in columns should have gutters or not, eg images that fill a column width, with a caption below that has a standard gutter.

  .grid-insight.us-grid-row
    .us-col-6
      .grid-insight-wrap
        %p 6 col, with inner
    .us-col-3
      .grid-insight-wrap
        %p 3 col, with inner
    .us-col-3
      .grid-insight-wrap
        %p 3 col, with inner


  %h1 Example grid (via classes)
  %p This grid is built with bootstrap style declared classes.

  = @grid

  .code-block__container
    %pre.code-block__code
      %code{class: :xml}= h @grid

  %h1 Example grid (via SASS)
  %p This grid example is built with symantic classes, with the grid embedded using SASS mixins, and with more responsive breakpoints.

  %p
    In the example below, the anchors act as the columns and the images inside have padding, acting like the ".inner" wrappers in previous example.

  = @grid_logos

  .code-block__container
    %pre.code-block__code.us-col-6
      %code{class: :xml}= h @grid_logos
    %pre.code-block__code.us-col-6{class: :scss}
      %code= File.read(Dir.pwd + '/source/stylesheets/modules/_grid-example.sass')
    
        