// @page Design/Icons
// @name Icons
// @partial icons
//
// @description
//   Icons are created by chaining classes together with `us-icon`.
//
//   ### Usage
//   * Suffixing with `--{size}` where size is one of *small*, *medium* or *large* will change the size of the icon from 16px, 32px and 64px respectively.
//   * `.us-icon--{size}--sm-tablet` and `.us-icon--{size}--mobile` will override icon sizes for those screen size
//   * `.us-icon--notext` allows you to set any element with no content to an icon
//   * `.us-icon--before` and `.us-icon--after` allow you to set the icon on the *:pseudo* elements of that element.
//   * blue, typegrey, inputgrey, typecyan and custom are colors that can be set on the icon with `.us-icon--{color}`
//
// @state alarm
// @state android
// @state arrow-circle
// @state arrow-up
// @state arrow-down
// @state book
// @state bookmark
// @state breadcrumb
// @state calculator
// @state calendar
// @state car
// @state checkbox-tick
// @state chevron-right
// @state clock
// @state close
// @state cog
// @state credit-card
// @state cross
// @state dual-fuel
// @state electric-light
// @state envelope
// @state exit-noexit
// @state facebook
// @state facebook-brand
// @state filter
// @state fixed-variable
// @state gas
// @state gauge
// @state github
// @state google
// @state google-brand
// @state graph-up
// @state home
// @state hot
// @state info
// @state kettle
// @state key
// @state lock
// @state magnify-in
// @state magnify
// @state menu
// @state message
// @state mobile
// @state monthly-dd
// @state network
// @state no-exit
// @state pdf
// @state pencil
// @state person-add
// @state person
// @state phone
// @state piggy-bank
// @state pin
// @state pound-note
// @state present
// @state print
// @state quarterly-dd
// @state question-circle
// @state quote
// @state recycle
// @state remove
// @state renewable
// @state results
// @state save
// @state share
// @state sim
// @state smiley
// @state sort
// @state speech-circle
// @state speech
// @state spinner
// @state star-half
// @state star
// @state starline-half
// @state starline
// @state talk
// @state tick-circle
// @state tick
// @state tv
// @state twitter
// @state twitter-brand
// @state uswitch
// @state variable
// @state warning-circle
// @state wifi
// @state wiki
// @state xml
// @state play
// @state pound-circle
//
// @markup
//  <svg role="img" class="us-icon--medium us-icon--custom us-icon--{$modifiers}"><use xlink:href="/images/icons.svg#icon-{$modifiers}"/></svg>

@import "ustyle/basics/variables/icons";

/// Returns a background position for the number of `$icon-colors`
///
/// @group icons
/// @author David Annez
///
/// @require {Variable} icon-colors--svg
/// @require {Variable} icon-colors--svg--custom
///
/// @param {String} $color
///   The matching colour string from the list of colours
///
/// @param {Bool} $parent [false]
///   If set to true, you can use this on a parent element and any icon within the parent
///   will have this icon colour. Especially useful for hover on buttons or larger elements.

// scss-lint:disable QualifyingElement

svg.us-icon--before,
svg.us-icon--after {
  display: inline-block;
  vertical-align: middle;
}

svg.us-icon--before {
  margin-right: $gutter-width/4;
}

svg.us-icon--after {
  margin-left: $gutter-width/4;
}

.us-icon--centered {
  position: relative;
  top: 50%;
  margin: 0 auto;
  transform: translateY(-50%);
}

.us-icon--notext {
  display: inline-block;
  text-indent: -999em;
}

//
// ICON COLOURS
//

@each $icon-color in $icon-colors--svg {
  $color-name: nth($icon-color, 1);
  $color-hex: nth($icon-color, 2);

  svg.us-icon--#{$color-name} {
    fill: $color-hex;
  }

  svg.us-icon--hover--#{$color-name}:hover {
    fill: $color-hex;
  }
}

// SVG icon coloring for custom classes

@each $icon-colors-svg in $icon-colors--svg--custom {
  $icon-name: nth($icon-colors-svg, 1);
  $icon-fill: nth($icon-colors-svg, 2);

  svg.us-icon--#{$icon-name} {
    fill: $icon-fill;
  }
}

// scss-lint:enable QualifyingElement

//
// ICON SIZING
//

@each $size in $icon-sizes {
  $size-name: nth($size, 1);
  $width: nth($size, 2);
  $height: nth($size, 3);

  .us-icon--#{$size-name} {
    width: $width;
    height: $height;
  }
}

@include respond-to(to-small-tablet) {
  @each $size in $icon-sizes {
    $size-name: nth($size, 1);
    $width: nth($size, 2);
    $height: nth($size, 3);

    .us-icon--#{$size-name}--sm-tablet {
      width: $width;
      height: $height;
    }
  }
}

@include respond-to(mobile) {
  @each $size in $icon-sizes {
    $size-name: nth($size, 1);
    $width: nth($size, 2);
    $height: nth($size, 3);

    .us-icon--#{$size-name}--mobile {
      width: $width;
      height: $height;
    }
  }
}


