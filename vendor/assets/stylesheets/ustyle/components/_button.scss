// Buttons
// ---
// The default `.us-btn` button.
// There is a larger version of the button as well.
// Each of these styles adheres to the uSwitch branding colours.
// Currently we support anchor tags and button tags as the main ussage
//
// .us-btn--primary - Used a save/update button
// .us-btn--action - Navigational button
// .neutral - Neutral button for use on white backgrounds
// .secondary--outlined - Outlined version of the secondary button
// .navy--outlined - Navy outline used for buttons on `$c-cyan` hero's
// .white--outlined - White outline for dark backgrounds
// .arrowed, .arrowed.arrow-right - Arrowed button used for CTAs (right pointing)
// .arrowed.arrow-left - Left pointing variation of arrowed buttons
// .large - Larger button for heros
// .small - Smaller button for mobile tables
// .blocked - Full width button
// .us-btn--link - link style button
// .disabled - Disabled styling (can also be styled with :disabled)
//
// Styleguide 3.1

$base-button-color: $c-keylinegrey !default;

$p-button-color: $c-red !default;
$s-button-color: $c-green !default;
$neutral-button-color: $c-keylinegrey !default;

$button-styles: ("primary", $p-button-color), ("action", $s-button-color) !default;
$outline-button-styles: ("secondary", $s-button-color), ("navy", $c-navy), ("white", white) !default;

@mixin button-style($name, $outlined: false) {
  @if $outlined {
    transition: none 0;
    background-color: transparent;
    border-color: nth($name, 2);
    color: nth($name, 2);
  }
  @else {
    transition: all .3s;
    background-color: nth($name, 2);
    border-color: shade(nth($name, 2), 20%);
    @if nth($name, 2) != white {
      color: white;  
    }
  }
  &:hover,
  &:focus {
    @if $outlined {
      background-color: tint(nth($name, 2), 90%);
      color: nth($name, 2);
    }
    @else {
      background-color: shade(nth($name, 2), 20%);
      border-color: shade(nth($name, 2), 20%);
      @if nth($name, 2) != white {
        color: white;  
      }
    }
  }
  &:active {
    @if $outlined {
      background-color: nth($name, 2);
      border-color: nth($name, 2);
      color: white;
      box-shadow: none;
    }
    @else {
      color: white;
      background-color: shade(nth($name, 2), 50%);
      border-color: shade(nth($name, 2), 50%);
    }
  }
}

%btn,
.us-btn {
  @extend %reset-box-model;
  @extend %input-background--normalise;
  @include normal-font;
  padding: 0.63em 1.25em;
  display: inline-block;
  border-radius: 3px;
  font-size: 1em;
  line-height: 1em;
  color: $c-typegrey;
  background-color: $base-button-color;
  border: 1px solid shade($base-button-color, 20%);
  vertical-align: middle;
  white-space: nowrap;
  text-decoration: none;
  text-align: center;
  cursor: pointer;
  outline: 0;

  &:visited {
    color: $c-typegrey;
  }

  &:hover,
  &:focus {
    background-color: tint($c-typecyan, 90%);
    border-color: $c-typecyan;
    color: $c-typecyan;
  }

  &:active {
    background-color: $c-typecyan;
    color: white;
  }

  &:disabled,
  &.disabled {
    opacity: .5;
    pointer-events: none
  } 
}

.us-btn--stronger {
  @include heading-font-secondary;
}

.us-btn--large {
  font-size: 1.2em;
}

.us-btn--small {
  padding: .4em .65em;
}

.us-btn--blocked {
  display: block;
  width: 100%;
  padding-left: 0;
  padding-right: 0;
}

.us-btn--link {
  padding: 0;
  border: none;
  background-color: transparent;
  color: $c-blue;
  line-height: $base-line-ratio;
  &:hover {
    color: $c-navy;
    text-decoration: underline;
  }
}

.us-btn--arrowed,
.us-btn--arrowed-right {
  padding: 0.63em 1.25em 0.63em 0.95em;
  &:after {
    @extend %link-triangle;
  }
  &:hover {
    &:after {
      left: 0.5em;
    }
  }
}

.us-btn--arrowed-left {
  padding-left: 1.25em;
  padding-right: 0.95em;
  &:before {
    @extend %link-triangle-left;
  }
  &:after {
    content: "";
    display: none;
  }
  &:hover {
    &:before {
      left: -0.5em;
    }
  }
}

@each $button-style in $button-styles {
  .us-btn--#{nth($button-style, 1)} {
    @include button-style($button-style);
  }
}
@each $button-style in $outline-button-styles {
  .us-btn--#{nth($button-style, 1)}-outlined {
    @include button-style($button-style, true);
  }
}