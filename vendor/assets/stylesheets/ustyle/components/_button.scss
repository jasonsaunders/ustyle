// Buttons
// ---
// The default `.us-btn` button.
// There is a larger version of the button as well.
// Each of these styles adheres to the uSwitch branding colours.
// Currently we support anchor tags and button tags as the main ussage
//
// .primary - Usually used a save/update button
// .secondary - Secondary use button, can be used multiple times
// .tertiary - Tertiary use button, can be used multiple times
// .primary--outlined - Usually used a save/update button
// .secondary--outlined - Secondary use button, can be used multiple times
// .tertiary--outlined - Tertiary use button, can be used multiple times
// .arrowed, .arrowed.arrow-right - Arrowed button used for CTAs (right pointing)
// .arrowed.arrow-left - Left pointing variation of arrowed buttons
// .large - Larger button for heros
// .small - Smaller button for mobile tables
// .blocked - Full width button
// .us-btn--link - link style button
// .disabled - Disabled styling (can also be styled with :disabled)
//
// Styleguide 3.1

$button-color: $c-red !default;
$p-button-color: $c-green !default;
$s-button-color: $c-typecyan !default;
$t-button-color: $c-blue !default;

$button-styles: ("primary", $p-button-color), ("secondary", $s-button-color), ("tertiary", $t-button-color) !default;

@mixin button-style($name, $outlined: false) {
  @if $outlined {
    transition: none 0;
    background-color: transparent;
    border-color: nth($name, 2);
    color: nth($name, 2);
  }
  @else {
    background-color: nth($name, 2);
    border-color: shade(nth($name, 2), 20%);
  }
  &:hover,
  &:focus {
    @if $outlined {
      background-color: tint(nth($name, 2), 90%);
      color: nth($name, 2);
    }
    @else {
      background-color: shade(nth($name, 2), 20%);
    }
  }
  &:active {
    @if $outlined {
      background-color: nth($name, 2);
      border-color: nth($name, 2);
      color: white;
      box-shadow: none;
    }
    @else {
      color: white;
      background-color: shade(nth($name, 2), 50%);
      border-color: shade(nth($name, 2), 50%);
    }
  }
}

%btn,
.us-btn {
  @extend %reset-box-model;
  @extend %input-background--normalise;
  @include normal-font;
  transition: all 180ms;
  padding: 0.63em 1.25em;
  display: inline-block;
  border-radius: 3px;
  font-size: 1em;
  line-height: 1em;
  color: white;
  background-color: $button-color;
  border: 1px solid shade($button-color, 20%);
  vertical-align: middle;
  white-space: nowrap;
  text-decoration: none;
  text-align: center;
  cursor: pointer;
  outline: 0;
  &:visited {
    color: white;
  }
  &:hover,
  &:focus {
    color: white;
    background-color: shade($button-color, 20%);
  }
  &:active {
    color: white;
    background-color: shade($button-color, 50%);
    border-color: shade($button-color, 50%);
  }
  &.stronger {
    @include heading-font-secondary;
  }
  &.large {
    font-size: 1.2em;
  }
  &.blocked {
    display: block;
    width: 100%;
    padding-left: 0;
    padding-right: 0;
  }
  &.us-btn--link {
    padding: 0;
    border: none;
    background-color: transparent;
    color: $c-blue;
    line-height: $base-line-ratio;
    &:hover {
      color: $c-navy;
      text-decoration: underline;
    }
  }
  &.arrowed,
  &.arrowed.arrow-right {
    padding: 0.63em 1.25em 0.63em 0.95em;
    &:after {
      @extend %link-triangle;
    }
    &:hover {
      &:after {
        left: 0.5em;
      }
    }
  }
  &.arrowed.arrow-left {
    padding-left: 1.25em;
    padding-right: 0.95em;
    &:before {
      @extend %link-triangle-left;
    }
    &:after {
      content: "";
      display: none;
    }
    &:hover {
      &:before {
        left: -0.5em;
      }
    }
  }
  &.small {
    padding: 0.4em 0.65em;
  }
  &:disabled,
  &.disabled {
    opacity: 0.5;
    pointer-events: none;
  }
  @each $button-style in $button-styles {
    &.#{nth($button-style, 1)} {
      @include button-style($button-style);
    }
  }
  @each $button-style in $button-styles {
    &.#{nth($button-style, 1)}--outlined {
      @include button-style($button-style, true);
    }
  }
}
